@startuml

abstract class FaceDetectionModel {
+ virtual std::vector<Face> extractFaces(const Rect& viewport, cv::Mat& image) = 0;
+ virtual ~FaceDetectionModel();
}

class OpenCVFaceDetectionModel {
- double _face_scale_factor;
- uint32_t _face_min_neighbours;
- double _eyes_scale_factor;
- uint32_t _eyes_min_neighbours;
- cv::CascadeClassifier _face_cascade;
- cv::CascadeClassifier _right_eye_cascade;
- cv::CascadeClassifier _left_eye_cascade;

+ std::vector<Face> extractFaces(const Rect& viewport, cv::Mat& image) override;
+ ~OpenCVFaceDetectionModel();
}

class DLibFaceDetectionModel {
- dlib::frontal_face_detector _detector;
+ std::vector<Face> extractFaces(const Rect& viewport, cv::Mat& image) override;
+ ~DLibFaceDetectionModel() = default;
}

FaceDetectionModel <|-- OpenCVFaceDetectionModel
FaceDetectionModel <|-- DLibFaceDetectionModel

@enduml
